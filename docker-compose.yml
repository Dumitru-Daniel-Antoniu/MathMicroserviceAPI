services:
  web:
    build: .
    container_name: fastapi-container-yml
    ports:
      - "8000:8000"
    volumes:
      - ./test.db:/app/test.db
    depends_on:
      - prometheus
      - redis
      - kafka
    environment:
      - PROMETHEUS_MULTIPROC_DIR=/tmp
      - KAFKA_BROKER=kafka:9092
    networks:
      - monitoring

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-container-yml
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 10s
      # timeout: 30s
      retries: 5
      # start_period: 30s
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper-container-yml
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"

  redis:
    image: redis:7
    container_name: redis-cache
    ports:
      - "6379:6379"
    restart: always
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
        - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: provisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring
    volumes:
      - grafana-data:/var/lib/grafana
      - ./dashboards:/var/lib/grafana/dashboards
      - ./provisioning:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SECURITY_COOKIE_SAME_SITE=none
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin


networks:
  monitoring:

volumes:
  grafana-data:

  prometheus-data:
    driver: local